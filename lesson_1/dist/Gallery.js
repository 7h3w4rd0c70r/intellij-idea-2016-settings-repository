// Generated by Haxe 3.4.2
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var lesson_$1_src_Gallery = function() {
};
lesson_$1_src_Gallery.__name__ = true;
lesson_$1_src_Gallery.prototype = {
	load: function() {
		var _gthis = this;
		var api = new lesson_$1_src_Remote("http://localhost/gallery");
		api.get("/list.json").then(function(jsonGallery) {
			var gallery = JSON.parse(jsonGallery);
			_gthis.appendImages(gallery.imgs);
		});
	}
	,appendImages: function(imgs) {
		var _g = 0;
		while(_g < imgs.length) {
			var img = imgs[_g];
			++_g;
			var imgNode = lesson_$1_src_Image.create(img.desc,img.src);
			window.document.getElementById("gallery").appendChild(imgNode);
		}
	}
};
var lesson_$1_src_Image = function() { };
lesson_$1_src_Image.__name__ = true;
lesson_$1_src_Image.create = function(desc,src) {
	var imgContainerNode = window.document.createElement("div");
	var descNode = window.document.createElement("div");
	var imgNode = window.document.createElement("img");
	var descContainerNode = window.document.createElement("div");
	imgContainerNode.className = "container";
	descContainerNode.className = "middle";
	imgNode.className = "image";
	descNode.className = "text";
	imgNode.setAttribute("src","http://localhost/gallery/" + src);
	descNode.innerText = desc;
	descContainerNode.appendChild(descNode);
	imgContainerNode.appendChild(imgNode);
	imgContainerNode.appendChild(descContainerNode);
	return imgContainerNode;
};
var lesson_$1_src_Main = function() { };
lesson_$1_src_Main.__name__ = true;
lesson_$1_src_Main.main = function() {
	var Gallery = new lesson_$1_src_Gallery();
	Gallery.load();
};
var lesson_$1_src_Remote = function(baseUrl) {
	this.baseUrl = baseUrl;
};
lesson_$1_src_Remote.__name__ = true;
lesson_$1_src_Remote.prototype = {
	get: function(url) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var request = new yloader_valueObject_Request(_gthis.baseUrl + url);
			var loader = new yloader_impl_js_XMLHttpRequestLoader(request);
			loader.onResponse = function(response) {
				if(response.success) {
					resolve(response.data);
				} else {
					console.log(response);
					reject("");
				}
			};
			loader.load();
		});
	}
};
var yloader_ILoader = function() { };
yloader_ILoader.__name__ = true;
var yloader_enums_Method = { __ename__ : true, __constructs__ : ["CONNECT","DELETE","GET","HEAD","OPTIONS","POST","PUT"] };
yloader_enums_Method.CONNECT = ["CONNECT",0];
yloader_enums_Method.CONNECT.__enum__ = yloader_enums_Method;
yloader_enums_Method.DELETE = ["DELETE",1];
yloader_enums_Method.DELETE.__enum__ = yloader_enums_Method;
yloader_enums_Method.GET = ["GET",2];
yloader_enums_Method.GET.__enum__ = yloader_enums_Method;
yloader_enums_Method.HEAD = ["HEAD",3];
yloader_enums_Method.HEAD.__enum__ = yloader_enums_Method;
yloader_enums_Method.OPTIONS = ["OPTIONS",4];
yloader_enums_Method.OPTIONS.__enum__ = yloader_enums_Method;
yloader_enums_Method.POST = ["POST",5];
yloader_enums_Method.POST.__enum__ = yloader_enums_Method;
yloader_enums_Method.PUT = ["PUT",6];
yloader_enums_Method.PUT.__enum__ = yloader_enums_Method;
var yloader_enums_Status = function() { };
yloader_enums_Status.__name__ = true;
var yloader_impl_js_XMLHttpRequestLoader = function(request) {
	this.request = request;
};
yloader_impl_js_XMLHttpRequestLoader.__name__ = true;
yloader_impl_js_XMLHttpRequestLoader.__interfaces__ = [yloader_ILoader];
yloader_impl_js_XMLHttpRequestLoader.prototype = {
	createXHR: function() {
		return js_Browser.createXMLHttpRequest();
	}
	,load: function() {
		this.cancel();
		this.xhr = this.createXHR();
		this.prepareXHR(this.xhr);
		this.xhr.send(this.request.data);
	}
	,cancel: function() {
		if(this.xhr != null) {
			this.disposeXHR(this.xhr);
		}
		this.xhr = null;
	}
	,getStatus: function(xhr) {
		var result;
		try {
			result = xhr.status;
		} catch( error ) {
			result = -1;
		}
		if(result == undefined) {
			return -1;
		} else {
			return result;
		}
	}
	,getHeaders: function(xhr) {
		var text = xhr.getAllResponseHeaders();
		var result = yloader_util_HeaderUtil.toParameters(text);
		return result;
	}
	,getResponse: function(xhr) {
		var status = this.getStatus(xhr);
		var success = this.isSuccess(status);
		var headers = this.getHeaders(xhr);
		return new yloader_valueObject_Response(success,xhr.responseText,status,xhr.statusText,headers);
	}
	,isSuccess: function(status) {
		if(status >= 200) {
			return status < 400;
		} else {
			return false;
		}
	}
	,handleResponse: function(xhr) {
		if(this.onResponse == null) {
			return;
		}
		var response = this.getResponse(xhr);
		this.onResponse(response);
	}
	,dispose: function() {
		this.cancel();
	}
	,prepareXHR: function(xhr) {
		var method = Std.string(this.request.method);
		xhr.onreadystatechange = $bind(this,this.onXHRReadyStateChange);
		xhr.open(method,this.request.get_urlWithQuery(),true);
		if(this.withCredentials) {
			xhr.withCredentials = true;
		}
		var _g = 0;
		var _g1 = this.request.headers;
		while(_g < _g1.length) {
			var header = _g1[_g];
			++_g;
			xhr.setRequestHeader(header.name,header.value);
		}
	}
	,disposeXHR: function(xhr) {
		xhr.onreadystatechange = null;
		try {
			xhr.abort();
		} catch( error ) {
		}
	}
	,onXHRReadyStateChange: function(event) {
		if(this.xhr.readyState != 4) {
			return;
		}
		this.handleResponse(this.xhr);
		this.dispose();
	}
};
var yloader_util_HeaderUtil = function() { };
yloader_util_HeaderUtil.__name__ = true;
yloader_util_HeaderUtil.toParameters = function(text) {
	var lines = text.split("\n");
	var result = [];
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		if(line == "") {
			continue;
		}
		var data = line.split(":");
		var name = StringTools.trim(data.shift());
		var value = StringTools.trim(data.join(":"));
		result.push(new yloader_valueObject_Parameter(name,value));
	}
	return result;
};
var yloader_util_ParameterUtil = function() { };
yloader_util_ParameterUtil.__name__ = true;
yloader_util_ParameterUtil.update = function(list,parameter) {
	var found = false;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		if(item.name == parameter.name) {
			item.value = parameter.value;
			found = true;
		}
	}
	if(!found) {
		list.push(parameter);
	}
};
yloader_util_ParameterUtil.urlEncode = function(list) {
	var result = null;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		var s = item.name;
		var result1 = (result == null ? "" : result + "&") + encodeURIComponent(s) + "=";
		var s1 = item.value;
		result = result1 + encodeURIComponent(s1);
	}
	return result;
};
yloader_util_ParameterUtil.fromQueryString = function(source) {
	if(source == null) {
		return null;
	}
	var queryString = HxOverrides.substr(source,0,1) == "?" ? HxOverrides.substr(source,1,null) : source;
	if(queryString == "") {
		return null;
	}
	var result = [];
	var pairs = queryString.split("&");
	var _g = 0;
	while(_g < pairs.length) {
		var pair = pairs[_g];
		++_g;
		result.push(yloader_util_ParameterUtil.fromPair(pair));
	}
	return result;
};
yloader_util_ParameterUtil.fromPair = function(pair) {
	var index = pair.indexOf("=");
	var name;
	var value = "";
	if(index >= 0) {
		var s = pair.substring(0,index);
		name = decodeURIComponent(s.split("+").join(" "));
		var s1 = pair.substring(index + 1);
		value = decodeURIComponent(s1.split("+").join(" "));
	} else {
		name = decodeURIComponent(pair.split("+").join(" "));
	}
	return new yloader_valueObject_Parameter(name,value);
};
var yloader_valueObject_Parameter = function(name,value) {
	this.name = name;
	this.value = value;
};
yloader_valueObject_Parameter.__name__ = true;
var yloader_valueObject_Request = function(url) {
	this.data = null;
	this.url = url;
	this.method = yloader_enums_Method.GET;
	this.headers = [];
	this.getParameters = [];
};
yloader_valueObject_Request.__name__ = true;
yloader_valueObject_Request.prototype = {
	get_urlWithQuery: function() {
		var query = yloader_util_ParameterUtil.urlEncode(this.getParameters);
		var result = this.url;
		if(query != null) {
			result += (result.indexOf("?") == -1 ? "?" : "&") + query;
		}
		return result;
	}
	,setHeader: function(header) {
		yloader_util_ParameterUtil.update(this.headers,header);
	}
	,setGetParameter: function(parameter) {
		yloader_util_ParameterUtil.update(this.getParameters,parameter);
	}
};
var yloader_valueObject_Response = function(success,data,status,statusText,headers) {
	this.success = success;
	this.data = data;
	this.status = status;
	this.statusText = statusText;
	this.headers = headers;
};
yloader_valueObject_Response.__name__ = true;
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
yloader_enums_Status.UNKNOWN = -2;
yloader_enums_Status.FAILED_TO_CONNECT_OR_RESOLVE_HOST = -1;
yloader_enums_Status.UNKNOWN_HOST = 12007;
yloader_enums_Status.FAILED_TO_CONNECT_TO_HOST = 12029;
lesson_$1_src_Main.main();
})();
